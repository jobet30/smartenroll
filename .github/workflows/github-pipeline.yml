name: CI/CD Pipeline

on:
  push:
    branches:
      - main
      - qa
      - uat
      - staging
      - production
  pull_request:
    branches:
      - main
      - qa
      - uat
      - staging
      - production

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Dependencies
        run: npm install

      - name: Build Docker image
        run: docker build -t smartrenroll:latest .

  test:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: Install Jest
        run: npm install --save-dev jest

      - name: Run tests
        run: npm test

  check-collection-status:
    runs-on: ubuntu-latest
    needs: test
    outputs:
      collection_ready: ${{ steps.check.outputs.collection_ready }}
      
    steps:
      - name: Check Collection Status
        id: check
        run: |
          # This is a placeholder for the logic to check collection status.
          # You should replace this with the actual check, e.g., querying the collection.

          # Simulate checking a collection (replace with actual logic)
          collection_ready=true  # Set to true if the collection meets deployment criteria

          echo "::set-output name=collection_ready::$collection_ready"

  deploy-uat:
    runs-on: ubuntu-latest
    needs: [check-collection-status]
    if: github.ref == 'refs/heads/uat' && needs.check-collection-status.outputs.collection_ready == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to UAT Server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@192.168.1.100 "docker pull smartrenroll:latest && docker-compose up -d"

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [check-collection-status]
    if: github.ref == 'refs/heads/staging' && needs.check-collection-status.outputs.collection_ready == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Staging Server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@192.168.1.100 "docker pull smartrenroll:latest && docker-compose up -d"

  deploy-production:
    runs-on: ubuntu-latest
    needs: [check-collection-status]
    if: github.ref == 'refs/heads/main' && needs.check-collection-status.outputs.collection_ready == 'true'

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy to Production Server
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@192.168.1.100 "docker pull smartrenroll:latest && docker-compose up -d"
